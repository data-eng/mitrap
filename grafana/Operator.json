{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 1,
  "links": [],
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 2,
      "panels": [],
      "title": "${installation} ",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "cepbemlo6msjke"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-BlPu"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "ppm",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 0,
        "y": 1
      },
      "id": 21,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "12.0.1",
      "targets": [
        {
          "query": "from(bucket: \"${bucket}\")\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r._measurement == \"co2\" and r.installation == \"${installation}\")\n    |> filter(fn: (r) => r._field == \"value\")\n    |> keep( columns: [ \"id\", \"_field\", \"_value\", \"_time\"] )",
          "refId": "A"
        }
      ],
      "title": "${co2_name}",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "cepbemlo6msjke"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "number of particles"
            },
            "properties": [
              {
                "id": "custom.axisPlacement",
                "value": "right"
              },
              {
                "id": "custom.axisColorMode",
                "value": "series"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "GMD"
            },
            "properties": [
              {
                "id": "custom.axisColorMode",
                "value": "series"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 12,
        "x": 12,
        "y": 1
      },
      "id": 20,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "12.0.1",
      "targets": [
        {
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"nanodust\" and r.installation == \"${installation}\")\n  |> filter(fn: (r) => r._field == \"gmd\" or r._field == \"pn\")\n  |> aggregateWindow(every: 1m, fn: mean, createEmpty: false)\n   |> map(fn: (r) => ({\n      r with\n      _field: if r._field == \"gmd\" then \"GMD\"\n              else if r._field == \"pn\" then \"number of particles\"\n              else r._field\n  }))\n  |> keep(columns: [\"id\", \"_field\", \"_value\", \"_time\"])",
          "refId": "A"
        }
      ],
      "title": "${nanodust_name} ",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "cepbemlo6msjke"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "nanometers",
            "axisPlacement": "auto",
            "fillOpacity": 50,
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "pointShape": "circle",
            "pointSize": {
              "fixed": 7
            },
            "pointStrokeWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "show": "points+lines"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "hourly_valve_off (mean)"
            },
            "properties": [
              {
                "id": "custom.axisLabel",
                "value": "dN / d log₁₀ p (Hourly Mean)"
              },
              {
                "id": "custom.axisPlacement",
                "value": "right"
              },
              {
                "id": "custom.axisColorMode",
                "value": "series"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "hourly_valve_on (mean)"
            },
            "properties": [
              {
                "id": "custom.axisLabel",
                "value": "dN / d log₁₀ p (Hourly Mean)"
              },
              {
                "id": "custom.axisColorMode",
                "value": "series"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 0,
        "y": 9
      },
      "id": 12,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "mapping": "manual",
        "series": [
          {
            "frame": {
              "matcher": {
                "id": "byIndex",
                "options": 1
              }
            },
            "x": {
              "matcher": {
                "id": "byName",
                "options": "nm"
              }
            },
            "y": {
              "matcher": {
                "id": "byName",
                "options": "hourly_valve_on (mean)"
              }
            }
          },
          {
            "frame": {
              "matcher": {
                "id": "byIndex",
                "options": 0
              }
            },
            "x": {
              "matcher": {
                "id": "byName",
                "options": "nm"
              }
            },
            "y": {
              "matcher": {
                "id": "byName",
                "options": "hourly_valve_off (mean)"
              }
            }
          }
        ],
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "12.0.1",
      "targets": [
        {
          "hide": false,
          "query": "import \"strings\"\n\nvalve_off_times = from(bucket: \"${bucket}\")\n  |> range(start: time(v: uint(v: v.timeRangeStop) - uint(v: 3600000000000)), stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"com1\" and r.installation == \"${installation}\")\n  |> filter(fn: (r) => r._field == \"valve_state\")\n  |> aggregateWindow(every: 10m, fn: mean, createEmpty: false)\n  |> filter(fn: (r) => r._value == 0)\n  |> keep(columns: [\"_time\"])\n\nall_data = from(bucket: \"${bucket}\")\n  |> range(start: time(v: uint(v: v.timeRangeStop) - uint(v: 3600000000000)), stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"smps_data\" and r.installation == \"${installation}\")\n  |> filter(fn: (r) => strings.hasPrefix(v: r._field, prefix: \"nm\"))\n  |> aggregateWindow(every: 10m, fn: mean, createEmpty: false)\n\n\njoined = join(\n  tables: {all: all_data, valveOff: valve_off_times},\n  on: [\"_time\"],\n  method: \"inner\"\n)\n\njoined\n  |> map(fn: (r) => ({\n      r with\n      nm: float(v: strings.replaceAll(\n            v: strings.replaceAll(v: r._field, t: \"nm\", u: \"\"),\n            t: \"_\", u: \".\"\n          ))\n  }))\n  |> map(fn: (r) => ({ r with hourly_valve_off: r._value }))\n  |> keep(columns: [\"nm\", \"hourly_valve_off\"])\n  |> sort(columns: [\"nm\"])\n",
          "refId": "Valve-Off"
        },
        {
          "datasource": {
            "type": "influxdb",
            "uid": "cepbemlo6msjke"
          },
          "hide": false,
          "query": "import \"strings\"\n\nvalve_on_times = from(bucket: \"${bucket}\")\n  |> range(start: time(v: uint(v: v.timeRangeStop) - uint(v: 3600000000000)), stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"com1\" and r.installation == \"${installation}\")\n  |> filter(fn: (r) => r._field == \"valve_state\")\n  |> aggregateWindow(every: 10m, fn: mean, createEmpty: false)\n  |> filter(fn: (r) => r._value == 1)\n  |> keep(columns: [\"_time\"])\n\nall_data = from(bucket: \"${bucket}\")\n  |> range(start: time(v: uint(v: v.timeRangeStop) - uint(v: 3600000000000)), stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"smps_data\" and r.installation == \"${installation}\")\n  |> filter(fn: (r) => strings.hasPrefix(v: r._field, prefix: \"nm\"))\n  |> aggregateWindow(every: 10m, fn: mean, createEmpty: false)\n\n\njoined = join(\n  tables: {all: all_data, valveOn: valve_on_times},\n  on: [\"_time\"],\n  method: \"inner\"\n)\n\njoined\n  |> map(fn: (r) => ({\n      r with\n      nm: float(v: strings.replaceAll(\n            v: strings.replaceAll(v: r._field, t: \"nm\", u: \"\"),\n            t: \"_\", u: \".\"\n          ))\n  }))\n  |> map(fn: (r) => ({ r with hourly_valve_on: r._value }))\n  |> keep(columns: [\"nm\", \"hourly_valve_on\"])\n  |> sort(columns: [\"nm\"])\n",
          "refId": "Valve-On"
        }
      ],
      "title": "${mpss_name} - Mean hourly concentration per nanometer",
      "transformations": [
        {
          "filter": {
            "id": "byRefId",
            "options": "/^(?:Valve-On)$/"
          },
          "id": "groupBy",
          "options": {
            "fields": {
              "_value": {
                "aggregations": [
                  "mean"
                ],
                "operation": "aggregate"
              },
              "hourly_valve_on": {
                "aggregations": [
                  "mean"
                ],
                "operation": "aggregate"
              },
              "nm": {
                "aggregations": [
                  "mean"
                ],
                "operation": "groupby"
              }
            }
          },
          "topic": "series"
        },
        {
          "filter": {
            "id": "byRefId",
            "options": "/^(?:Valve-Off)$/"
          },
          "id": "groupBy",
          "options": {
            "fields": {
              "hourly_valve_off": {
                "aggregations": [
                  "mean"
                ],
                "operation": "aggregate"
              },
              "nm": {
                "aggregations": [],
                "operation": "groupby"
              }
            }
          },
          "topic": "series"
        }
      ],
      "type": "xychart"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "cepbemlo6msjke"
      },
      "fieldConfig": {
        "defaults": {
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "scaleDistribution": {
              "type": "linear"
            }
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 12,
        "y": 9
      },
      "id": 8,
      "options": {
        "calculate": false,
        "cellGap": 0,
        "color": {
          "exponent": 0.5,
          "fill": "dark-orange",
          "mode": "scheme",
          "reverse": false,
          "scale": "exponential",
          "scheme": "RdYlBu",
          "steps": 128
        },
        "exemplars": {
          "color": "rgba(255,0,255,0.7)"
        },
        "filterValues": {
          "le": 1e-9
        },
        "legend": {
          "show": true
        },
        "rowsFrame": {
          "layout": "auto"
        },
        "tooltip": {
          "mode": "single",
          "showColorScale": false,
          "yHistogram": false
        },
        "yAxis": {
          "axisPlacement": "left",
          "reverse": false,
          "unit": "nm"
        }
      },
      "pluginVersion": "12.0.1",
      "targets": [
        {
          "query": "import \"strings\"\nimport \"array\"\nimport \"experimental\"\n\nreal = from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"smps_data\" and r.installation == \"${installation}\")\n  |> filter(fn: (r) => strings.hasPrefix(v: r._field, prefix: \"nm\"))  \n  |> map(fn: (r) => ({\n      r with\n      nm: float(v: strings.replaceAll(v: strings.replaceAll(v: r._field, t: \"nm\", u: \"\"), t: \"_\", u: \".\")) \n  }))\n  |> map(fn: (r) => ({\n      r with nm_bin: float(v: uint(v: r.nm / 10.0)) * 10.0\n  }))\n  |> keep(columns: [\"_time\", \"_value\", \"nm_bin\"])\n\nfallback = array.from(rows: [\n  {_time: now(), _value: 0.0, nm_bin: 0.0}\n])\n\ndata = union(tables: [real, fallback])\n  |> group(columns: [\"nm_bin\"])  // optional but helps shape the data\n  |> sort(columns: [\"_time\"])\n\ndata |> yield(name: \"table\")",
          "refId": "A"
        }
      ],
      "title": "${mpss_name} - Heatmap",
      "transformations": [
        {
          "id": "sortBy",
          "options": {
            "fields": {},
            "sort": [
              {
                "desc": true,
                "field": "nm_bin"
              }
            ]
          }
        },
        {
          "id": "groupingToMatrix",
          "options": {
            "columnField": "nm_bin",
            "rowField": "_time",
            "valueField": "_value"
          }
        }
      ],
      "type": "heatmap"
    },
    {
      "datasource": {
        "uid": "cepbemlo6msjke"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd"
          },
          "custom": {
            "axisPlacement": "auto",
            "fillOpacity": 61,
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": 60000,
            "lineWidth": 0,
            "spanNulls": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 11,
        "x": 5,
        "y": 18
      },
      "id": 6,
      "options": {
        "alignValue": "center",
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "mergeValues": true,
        "rowHeight": 0.19,
        "showValue": "always",
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "12.0.1",
      "targets": [
        {
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"com1\" and r.installation == \"${installation}\")\n  |> filter(fn: (r) => r._field == \"valve_state\")\n  |> map(fn: (r) => ({ r with _field: \"Valve State\" }))\n  |> keep(columns: [\"_time\", \"_value\", \"_field\", \"id\"])\n",
          "refId": "A"
        }
      ],
      "title": "${com1_name} - VALVE STATE",
      "transparent": true,
      "type": "state-timeline"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "cepbemlo6msjke"
      },
      "description": "COM2 from MStack_Flow_Meter",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "l/m",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": 300000,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 11,
        "x": 0,
        "y": 22
      },
      "id": 1,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "12.0.1",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "cepbemlo6msjke"
          },
          "query": "from(bucket: \"${bucket}\")\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r._measurement == \"com2\" and r.installation == \"${installation}\")\n     |> map(fn: (r) => ({\n      r with\n      _field: if r._field == \"value\" then \"flow\"\n              else r._field\n    }))\n    |> keep( columns: [ \"id\", \"_field\", \"_value\", \"_time\"] )",
          "refId": "A"
        }
      ],
      "title": "${com2_name} - Flow",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "cepbemlo6msjke"
      },
      "description": "COM1 from MStack_Flow_Meter",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "left",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": 300000,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "max": 100,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "pressure"
            },
            "properties": [
              {
                "id": "custom.axisPlacement",
                "value": "right"
              },
              {
                "id": "custom.axisLabel",
                "value": "kPA"
              },
              {
                "id": "custom.axisColorMode",
                "value": "series"
              }
            ]
          },
          {
            "__systemRef": "hideSeriesFrom",
            "matcher": {
              "id": "byNames",
              "options": {
                "mode": "exclude",
                "names": [
                  "pressure"
                ],
                "prefix": "All except:",
                "readOnly": true
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": false,
                  "tooltip": false,
                  "viz": true
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 13,
        "x": 11,
        "y": 22
      },
      "id": 3,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "timezone": [
          ""
        ],
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "12.0.1",
      "targets": [
        {
          "query": "from(bucket: \"${bucket}\")\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r._measurement == \"com1\")\n    |> filter(fn: (r) => r._field != \"valve_state\" and r.installation == \"${installation}\")\n    |> filter(fn: (r) => r._field == \"pressure_kpa\" or r._field == \"c3\" or r._field == \"conc_3_percent\" or r._field == \"conc_c5\" or r._field == \"conc_5_percent\")\n    |> map(fn: (r) => ({\n      r with\n      _field: if r._field == \"c3\" then \"T1\"\n              else if r._field == \"conc_c5\" then \"T2\"\n              else if r._field == \"conc_3_percent\" then \"rh1\"\n              else if r._field == \"conc_5_percent\" then \"rh2\"\n              else if r._field == \"pressure_kpa\" then \"pressure\"\n              else r._field\n    }))\n    |> keep( columns: [ \"id\", \"_field\", \"_value\", \"_time\"] )",
          "refId": "values"
        }
      ],
      "title": "${com1_name} - RH-T, P",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "cepbemlo6msjke"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "l/m",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": 60000,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 9,
        "x": 0,
        "y": 31
      },
      "id": 4,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "12.0.1",
      "targets": [
        {
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"ae31\" and r.installation == \"${installation}\")\n  |> filter(fn: (r) => r._field == \"flow\")\n  |> keep( columns: [ \"id\", \"_field\", \"_value\", \"_time\"] )",
          "refId": "A"
        }
      ],
      "title": "${ae31_name} - Flow ",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "cepbemlo6msjke"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "ng/m³",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": 300000,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 15,
        "x": 9,
        "y": 31
      },
      "id": 5,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "12.0.1",
      "targets": [
        {
          "query": "import \"strings\"\n\nfrom(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"ae31\" and r.installation == \"${installation}\")\n  |> filter(fn: (r) => r._field != \"time_str\" and r._field != \"date_str\" and r._field != \"flow\")\n  |> map(fn: (r) => ({\n      r with _field: strings.replaceAll(v: r._field, t: \"nm\", u: \"\") + \" nm\"\n  }))\n  |> keep(columns: [\"id\", \"_field\", \"_value\", \"_time\"])\n",
          "refId": "A"
        }
      ],
      "title": "${ae31_name} - EBC",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "cepbemlo6msjke"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd"
          },
          "custom": {
            "axisPlacement": "auto",
            "fillOpacity": 70,
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": 60000,
            "lineWidth": 0,
            "spanNulls": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 9,
        "x": 6,
        "y": 40
      },
      "id": 11,
      "options": {
        "alignValue": "center",
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "mergeValues": true,
        "rowHeight": 0.9,
        "showValue": "always",
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "12.0.1",
      "targets": [
        {
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"cpc_data\" and r.installation == \"${installation}\")\n  |> filter(fn: (r) => r._field == \"status_error\")\n   |> map(fn: (r) => ({\n      r with\n      _field: if r._field == \"status_error\" then \" \"\n              else r._field\n  }))\n  |> aggregateWindow(every: 30s, fn: mean, createEmpty: false)\n  |> keep(columns: [\"id\", \"_field\", \"_value\", \"_time\"])\n",
          "refId": "A"
        }
      ],
      "title": "CPC_A20 - Status Error",
      "transparent": true,
      "type": "state-timeline"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "cepbemlo6msjke"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisGridShow": false,
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 17,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": 60000,
            "lineInterpolation": "smooth",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 1,
            "pointSize": 2,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "always",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 10,
        "x": 0,
        "y": 44
      },
      "id": 10,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "hidden",
          "placement": "right",
          "showLegend": false
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "12.0.1",
      "targets": [
        {
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"cpc_data\" and r.installation == \"${installation}\")\n  |> filter(fn: (r) => r._field == \"liquid_level\")\n  |> aggregateWindow(every: 30s, fn: mean, createEmpty: false)\n  |> keep(columns: [\"id\", \"_field\", \"_value\", \"_time\"])\n",
          "refId": "A"
        }
      ],
      "title": "CPC_A20 (VAR) - Liquid Level",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "cepbemlo6msjke"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic-by-name"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "series",
            "axisLabel": "#/cc",
            "axisPlacement": "left",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": 60000,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "nozzle pressure"
            },
            "properties": [
              {
                "id": "custom.axisPlacement",
                "value": "right"
              },
              {
                "id": "custom.axisLabel",
                "value": "kPa"
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 14,
        "x": 10,
        "y": 44
      },
      "id": 7,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "12.0.1",
      "targets": [
        {
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"cpc_data\" and r.installation == \"${installation}\")\n  |> filter(fn: (r) => r._field == \"concentration_cc\" or r._field == \"nozzle_pressure_kPa\")\n  |> aggregateWindow(every: 30s, fn: mean, createEmpty: false)\n   |> map(fn: (r) => ({\n      r with\n      _field: if r._field == \"concentration_cc\" then \"concentration\"\n              else if r._field == \"nozzle_pressure_kPa\" then \"nozzle pressure\"\n              else r._field\n  }))\n  |> keep(columns: [\"id\", \"_field\", \"_value\", \"_time\"])\n",
          "refId": "A"
        }
      ],
      "title": "CPC_A20 (VAR) - Concentration",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "cepbemlo6msjke"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 50,
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "pointShape": "circle",
            "pointSize": {
              "fixed": 5
            },
            "pointStrokeWidth": 1,
            "scaleDistribution": {
              "log": 2,
              "type": "log"
            },
            "show": "points+lines"
          },
          "fieldMinMax": false,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "_value"
            },
            "properties": [
              {
                "id": "custom.axisLabel",
                "value": "#/Lt"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "_value"
            },
            "properties": []
          },
          {
            "__systemRef": "hideSeriesFrom",
            "matcher": {
              "id": "byNames",
              "options": {
                "mode": "exclude",
                "names": [
                  "_value C8"
                ],
                "prefix": "All except:",
                "readOnly": true
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": false,
                  "tooltip": false,
                  "viz": true
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 11,
        "w": 12,
        "x": 0,
        "y": 51
      },
      "id": 13,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "mapping": "manual",
        "series": [
          {
            "frame": {
              "matcher": {
                "id": "byIndex",
                "options": 0
              }
            },
            "name": {
              "fixed": "C0"
            },
            "x": {
              "matcher": {
                "id": "byName",
                "options": "nm C0"
              }
            },
            "y": {
              "matcher": {
                "id": "byName",
                "options": "_value C0"
              }
            }
          },
          {
            "frame": {
              "matcher": {
                "id": "byIndex",
                "options": 1
              }
            },
            "name": {
              "fixed": "C1"
            },
            "x": {
              "matcher": {
                "id": "byName",
                "options": "nm C1"
              }
            },
            "y": {
              "matcher": {
                "id": "byName",
                "options": "_value C1"
              }
            }
          },
          {
            "frame": {
              "matcher": {
                "id": "byIndex",
                "options": 2
              }
            },
            "name": {
              "fixed": "C2"
            },
            "x": {
              "matcher": {
                "id": "byName",
                "options": "nm C2"
              }
            },
            "y": {
              "matcher": {
                "id": "byName",
                "options": "_value C2"
              }
            }
          },
          {
            "frame": {
              "matcher": {
                "id": "byIndex",
                "options": 3
              }
            },
            "name": {
              "fixed": "C3"
            },
            "x": {
              "matcher": {
                "id": "byName",
                "options": "nm C3"
              }
            },
            "y": {
              "matcher": {
                "id": "byName",
                "options": "_value C3"
              }
            }
          },
          {
            "frame": {
              "matcher": {
                "id": "byIndex",
                "options": 4
              }
            },
            "name": {
              "fixed": "C4"
            },
            "x": {
              "matcher": {
                "id": "byName",
                "options": "nm C4"
              }
            },
            "y": {
              "matcher": {
                "id": "byName",
                "options": "_value C4"
              }
            }
          },
          {
            "frame": {
              "matcher": {
                "id": "byIndex",
                "options": 5
              }
            },
            "name": {
              "fixed": "C5"
            },
            "x": {
              "matcher": {
                "id": "byName",
                "options": "nm C5"
              }
            },
            "y": {
              "matcher": {
                "id": "byName",
                "options": "_value C5"
              }
            }
          },
          {
            "frame": {
              "matcher": {
                "id": "byIndex",
                "options": 6
              }
            },
            "name": {
              "fixed": "C6"
            },
            "x": {
              "matcher": {
                "id": "byName",
                "options": "nm C6"
              }
            },
            "y": {
              "matcher": {
                "id": "byName",
                "options": "_value C6"
              }
            }
          },
          {
            "frame": {
              "matcher": {
                "id": "byIndex",
                "options": 7
              }
            },
            "name": {
              "fixed": "C7"
            },
            "x": {
              "matcher": {
                "id": "byName",
                "options": "nm C7"
              }
            },
            "y": {
              "matcher": {
                "id": "byName",
                "options": "_value C7"
              }
            }
          },
          {
            "frame": {
              "matcher": {
                "id": "byIndex",
                "options": 8
              }
            },
            "name": {
              "fixed": "C8"
            },
            "x": {
              "matcher": {
                "id": "byName",
                "options": "nm C8"
              }
            },
            "y": {
              "matcher": {
                "id": "byName",
                "options": "_value C8"
              }
            }
          },
          {
            "frame": {
              "matcher": {
                "id": "byIndex",
                "options": 9
              }
            },
            "name": {
              "fixed": "C9"
            },
            "x": {
              "matcher": {
                "id": "byName",
                "options": "nm C9"
              }
            },
            "y": {
              "matcher": {
                "id": "byName",
                "options": "_value C9"
              }
            }
          },
          {
            "frame": {
              "matcher": {
                "id": "byIndex",
                "options": 10
              }
            },
            "name": {
              "fixed": "c0"
            },
            "x": {
              "matcher": {
                "id": "byName",
                "options": "nm c0"
              }
            },
            "y": {
              "matcher": {
                "id": "byName",
                "options": "_value c0"
              }
            }
          },
          {
            "frame": {
              "matcher": {
                "id": "byIndex",
                "options": 11
              }
            },
            "name": {
              "fixed": "c1"
            },
            "x": {
              "matcher": {
                "id": "byName",
                "options": "nm c1"
              }
            },
            "y": {
              "matcher": {
                "id": "byName",
                "options": "_value c1"
              }
            }
          },
          {
            "frame": {
              "matcher": {
                "id": "byIndex",
                "options": 12
              }
            },
            "name": {
              "fixed": "c2"
            },
            "x": {
              "matcher": {
                "id": "byName",
                "options": "nm c2"
              }
            },
            "y": {
              "matcher": {
                "id": "byName",
                "options": "_value c2"
              }
            }
          },
          {
            "frame": {
              "matcher": {
                "id": "byIndex",
                "options": 13
              }
            },
            "name": {
              "fixed": "c3"
            },
            "x": {
              "matcher": {
                "id": "byName",
                "options": "nm c3"
              }
            },
            "y": {
              "matcher": {
                "id": "byName",
                "options": "_value c3"
              }
            }
          },
          {
            "frame": {
              "matcher": {
                "id": "byIndex",
                "options": 14
              }
            },
            "name": {
              "fixed": "c4"
            },
            "x": {
              "matcher": {
                "id": "byName",
                "options": "nm c4"
              }
            },
            "y": {
              "matcher": {
                "id": "byName",
                "options": "_value c4"
              }
            }
          },
          {
            "frame": {
              "matcher": {
                "id": "byIndex",
                "options": 15
              }
            },
            "name": {
              "fixed": "c5"
            },
            "x": {
              "matcher": {
                "id": "byName",
                "options": "nm c5"
              }
            },
            "y": {
              "matcher": {
                "id": "byName",
                "options": "_value c5"
              }
            }
          },
          {
            "frame": {
              "matcher": {
                "id": "byIndex",
                "options": 16
              }
            },
            "name": {
              "fixed": "c6"
            },
            "x": {
              "matcher": {
                "id": "byName",
                "options": "nm c6"
              }
            },
            "y": {
              "matcher": {
                "id": "byName",
                "options": "_value c6"
              }
            }
          },
          {
            "frame": {
              "matcher": {
                "id": "byIndex",
                "options": 17
              }
            },
            "name": {
              "fixed": "c7"
            },
            "x": {
              "matcher": {
                "id": "byName",
                "options": "nm c7"
              }
            },
            "y": {
              "matcher": {
                "id": "byName",
                "options": "_value c7"
              }
            }
          },
          {
            "frame": {
              "matcher": {
                "id": "byIndex",
                "options": 18
              }
            },
            "name": {
              "fixed": "c8"
            },
            "x": {
              "matcher": {
                "id": "byName",
                "options": "nm c8"
              }
            },
            "y": {
              "matcher": {
                "id": "byName",
                "options": "_value c8"
              }
            }
          },
          {
            "frame": {
              "matcher": {
                "id": "byIndex",
                "options": 19
              }
            },
            "name": {
              "fixed": "c9"
            },
            "x": {
              "matcher": {
                "id": "byName",
                "options": "nm c9"
              }
            },
            "y": {
              "matcher": {
                "id": "byName",
                "options": "_value c9"
              }
            }
          }
        ],
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "12.0.1",
      "targets": [
        {
          "query": "import \"strings\"\n\nfrom(bucket: \"${bucket}\")\n  |> range(start: time(v: uint(v: v.timeRangeStop) - uint(v: 3600000000000)), stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"grimm\" and r.installation == \"${installation}\")\n  |> aggregateWindow(every: 1m, fn: mean, createEmpty: false)\n  |> map(fn: (r) => ({\n      r with\n      nm: float(v: strings.replaceAll(v: strings.replaceAll(v: r._field, t: \"nm\", u: \"\"), t: \"_\", u: \".\")) \n  }))\n  |> group(columns: [\"nm\", \"name\"])\n  |> mean()\n  |> group(columns: [\"_field\", \"name\"])  \n  |> sort(columns: [\"nm\"])\n  |> difference()\n  |> map(fn: (r) => ({ r with _value: -1.0 * 10.0 * r._value }))",
          "refId": "A"
        }
      ],
      "title": "${grimm_name} - Differential Mean per minute",
      "type": "xychart"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "cepbemlo6msjke"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "μg/Lt",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 11,
        "w": 12,
        "x": 12,
        "y": 51
      },
      "id": 14,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "12.0.1",
      "targets": [
        {
          "query": "import \"math\"\n\nfrom(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"grimm\" and r.installation == \"${installation}\")\n  //|> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> keep(columns: [\"_time\", \"_field\", \"_value\", \"name\"])\n  |> group(columns: [\"_time\", \"name\"]) \n  |> difference()\n  |> map(fn: (r) => ({\n      r with _value: (-10.0 * ((math.pi / 4.0) * r._value ^ 3.0) * (10.0 ^ -9.0))\n  }))\n  |> sum()\n  |> group(columns: [\"name\"]) ",
          "refId": "A"
        }
      ],
      "title": "${grimm_name} - Total Volume",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "cepbemlo6msjke"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 0,
        "y": 62
      },
      "id": 16,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "12.0.1",
      "targets": [
        {
          "query": "from(bucket: \"${bucket}\")\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r._measurement == \"ma200\" and r.installation == \"${installation}\")\n    |> filter(fn: (r) => r._field == \"flow_total\" or r._field == \"flow1\" or r._field == \"flow2\")\n    |> keep( columns: [ \"id\", \"_field\", \"_value\", \"_time\"] )",
          "refId": "A"
        }
      ],
      "title": "${ma200_name} - Flow",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "cepbemlo6msjke"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "bluebcc"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "blue",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "greenbcc"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "irbcc"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "yellow",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "redbcc"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "uvbcc"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "purple",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "__systemRef": "hideSeriesFrom",
            "matcher": {
              "id": "byNames",
              "options": {
                "mode": "exclude",
                "names": [
                  "bluebcc",
                  "greenbcc",
                  "irbcc",
                  "redbcc"
                ],
                "prefix": "All except:",
                "readOnly": true
              }
            },
            "properties": [
              {
                "id": "custom.hideFrom",
                "value": {
                  "legend": false,
                  "tooltip": false,
                  "viz": true
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 8,
        "y": 62
      },
      "id": 17,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "12.0.1",
      "targets": [
        {
          "query": "from(bucket: \"${bucket}\")\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r._measurement == \"ma200\" and r.installation == \"${installation}\")\n    |> filter(fn: (r) => r._field == \"uvbcc\" or r._field == \"bluebcc\" or r._field == \"redbcc\" or r._field == \"greenbcc\" or r._field == \"irbcc\")\n    |> keep( columns: [ \"id\", \"_field\", \"_value\", \"_time\"] )",
          "refId": "A"
        }
      ],
      "title": "${ma200_name} - BC corrected",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "cepbemlo6msjke"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "barWidthFactor": 0.6,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green"
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "blueatn1"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "blue",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "greenatn1"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "redatn1"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "iratn1"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "yellow",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "uvatn1"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "purple",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 8,
        "x": 16,
        "y": 62
      },
      "id": 18,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "hideZeros": false,
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "12.0.1",
      "targets": [
        {
          "query": "from(bucket: \"${bucket}\")\n    |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n    |> filter(fn: (r) => r._measurement == \"ma200\" and r.installation == \"${installation}\")\n    |> filter(fn: (r) => r._field == \"uvatn1\" or r._field == \"blueatn1\" or r._field == \"redatn1\" or r._field == \"greenatn1\" or r._field == \"iratn1\")\n    |> keep( columns: [ \"id\", \"_field\", \"_value\", \"_time\"] )",
          "refId": "A"
        }
      ],
      "title": "${ma200_name} - ATN1",
      "type": "timeseries"
    }
  ],
  "preload": false,
  "schemaVersion": 41,
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {
          "text": "Athens - Patission - CE",
          "value": "Athens - Patission - CE"
        },
        "definition": "from(bucket: \"mitrap006\")\n  |> range(start: -10d)\n  |> filter(fn: (r) => exists r.installation)\n  |> sort(columns: [\"_time\"], desc: true)\n  |> keep(columns: [\"installation\"])\n  |> limit(n:1)\n",
        "description": "",
        "name": "installation",
        "options": [],
        "query": {
          "maxDataPoints": 1,
          "query": "from(bucket: \"mitrap006\")\n  |> range(start: -10d)\n  |> filter(fn: (r) => exists r.installation)\n  |> sort(columns: [\"_time\"], desc: true)\n  |> keep(columns: [\"installation\"])\n  |> limit(n:1)\n",
          "refId": "InfluxVariableQueryEditor-VariableQuery"
        },
        "refresh": 1,
        "regex": "",
        "type": "query"
      },
      {
        "current": {
          "text": "MPSS",
          "value": "MPSS"
        },
        "definition": "from(bucket: \"mitrap006\")\n  |> range(start: -10d)\n  |> filter(fn: (r) => r._measurement == \"smps_data\" and exists r.instrument)\n  |> keep(columns: [\"instrument\", \"_time\"])\n  |> sort(columns: [\"_time\"], desc: true)\n  |> keep(columns: [\"instrument\"])\n  |> limit(n:1)\n",
        "hide": 2,
        "name": "mpss_name",
        "options": [],
        "query": {
          "query": "from(bucket: \"mitrap006\")\n  |> range(start: -10d)\n  |> filter(fn: (r) => r._measurement == \"smps_data\" and exists r.instrument)\n  |> keep(columns: [\"instrument\", \"_time\"])\n  |> sort(columns: [\"_time\"], desc: true)\n  |> keep(columns: [\"instrument\"])\n  |> limit(n:1)\n"
        },
        "refresh": 1,
        "regex": "",
        "type": "query"
      },
      {
        "current": {
          "text": "Flow Meter Valve COM1",
          "value": "Flow Meter Valve COM1"
        },
        "definition": "from(bucket: \"mitrap006\")\n  |> range(start: -10d)\n  |> filter(fn: (r) => r._measurement == \"com1\" and exists r.instrument)\n  |> keep(columns: [\"instrument\", \"_time\"])\n  |> sort(columns: [\"_time\"], desc: true)\n  |> keep(columns: [\"instrument\"])\n  |> limit(n:1)\n",
        "hide": 2,
        "name": "com1_name",
        "options": [],
        "query": {
          "query": "from(bucket: \"mitrap006\")\n  |> range(start: -10d)\n  |> filter(fn: (r) => r._measurement == \"com1\" and exists r.instrument)\n  |> keep(columns: [\"instrument\", \"_time\"])\n  |> sort(columns: [\"_time\"], desc: true)\n  |> keep(columns: [\"instrument\"])\n  |> limit(n:1)\n"
        },
        "refresh": 1,
        "regex": "",
        "type": "query"
      },
      {
        "current": {
          "text": "Flow Meter Valve COM2",
          "value": "Flow Meter Valve COM2"
        },
        "definition": "from(bucket: \"mitrap006\")\n  |> range(start: -10d)\n  |> filter(fn: (r) => r._measurement == \"com2\" and exists r.instrument)\n  |> keep(columns: [\"instrument\", \"_time\"])\n  |> sort(columns: [\"_time\"], desc: true)\n  |> keep(columns: [\"instrument\"])\n  |> limit(n:1)\n",
        "hide": 2,
        "name": "com2_name",
        "options": [],
        "query": {
          "query": "from(bucket: \"mitrap006\")\n  |> range(start: -10d)\n  |> filter(fn: (r) => r._measurement == \"com2\" and exists r.instrument)\n  |> keep(columns: [\"instrument\", \"_time\"])\n  |> sort(columns: [\"_time\"], desc: true)\n  |> keep(columns: [\"instrument\"])\n  |> limit(n:1)\n"
        },
        "refresh": 1,
        "regex": "",
        "type": "query"
      },
      {
        "current": {
          "text": "AE 31",
          "value": "AE 31"
        },
        "definition": "from(bucket: \"mitrap006\")\n  |> range(start: -10d)\n  |> filter(fn: (r) => r._measurement == \"ae31\" and exists r.instrument)\n  |> keep(columns: [\"instrument\", \"_time\"])\n  |> sort(columns: [\"_time\"], desc: true)\n  |> keep(columns: [\"instrument\"])\n  |> limit(n:1)\n",
        "hide": 2,
        "name": "ae31_name",
        "options": [],
        "query": {
          "query": "from(bucket: \"mitrap006\")\n  |> range(start: -10d)\n  |> filter(fn: (r) => r._measurement == \"ae31\" and exists r.instrument)\n  |> keep(columns: [\"instrument\", \"_time\"])\n  |> sort(columns: [\"_time\"], desc: true)\n  |> keep(columns: [\"instrument\"])\n  |> limit(n:1)\n"
        },
        "refresh": 1,
        "regex": "",
        "type": "query"
      },
      {
        "current": {
          "text": "Grimm OPC",
          "value": "Grimm OPC"
        },
        "definition": "from(bucket: \"mitrap006\")\n  |> range(start: -10d)\n  |> filter(fn: (r) => r._measurement == \"grimm\" and exists r.instrument)\n  |> keep(columns: [\"instrument\", \"_time\"])\n  |> sort(columns: [\"_time\"], desc: true)\n  |> keep(columns: [\"instrument\"])\n  |> limit(n:1)\n",
        "hide": 2,
        "name": "grimm_name",
        "options": [],
        "query": {
          "query": "from(bucket: \"mitrap006\")\n  |> range(start: -10d)\n  |> filter(fn: (r) => r._measurement == \"grimm\" and exists r.instrument)\n  |> keep(columns: [\"instrument\", \"_time\"])\n  |> sort(columns: [\"_time\"], desc: true)\n  |> keep(columns: [\"instrument\"])\n  |> limit(n:1)\n"
        },
        "refresh": 1,
        "regex": "",
        "type": "query"
      },
      {
        "current": {
          "text": "MA 200",
          "value": "MA 200"
        },
        "definition": "from(bucket: \"mitrap006\")\n  |> range(start: -10d)\n  |> filter(fn: (r) => r._measurement == \"ma200\" and exists r.instrument)\n  |> keep(columns: [\"instrument\", \"_time\"])\n  |> sort(columns: [\"_time\"], desc: true)\n  |> keep(columns: [\"instrument\"])\n  |> limit(n:1)",
        "hide": 2,
        "name": "ma200_name",
        "options": [],
        "query": {
          "query": "from(bucket: \"mitrap006\")\n  |> range(start: -10d)\n  |> filter(fn: (r) => r._measurement == \"ma200\" and exists r.instrument)\n  |> keep(columns: [\"instrument\", \"_time\"])\n  |> sort(columns: [\"_time\"], desc: true)\n  |> keep(columns: [\"instrument\"])\n  |> limit(n:1)"
        },
        "refresh": 1,
        "regex": "",
        "type": "query"
      },
      {
        "current": {
          "text": "mitrap006",
          "value": "mitrap006"
        },
        "definition": "buckets()\n",
        "hide": 2,
        "name": "bucket",
        "options": [],
        "query": {
          "query": "buckets()\n"
        },
        "refresh": 1,
        "regex": "",
        "type": "query"
      },
      {
        "current": {
          "text": "Nanodust",
          "value": "Nanodust"
        },
        "definition": "from(bucket: \"mitrap006\")\n  |> range(start: -10d)\n  |> filter(fn: (r) => r._measurement == \"nanodust\" and exists r.instrument)\n  |> keep(columns: [\"instrument\", \"_time\"])\n  |> sort(columns: [\"_time\"], desc: true)\n  |> keep(columns: [\"instrument\"])\n  |> limit(n:1)",
        "hide": 2,
        "name": "nanodust_name",
        "options": [],
        "query": {
          "query": "from(bucket: \"mitrap006\")\n  |> range(start: -10d)\n  |> filter(fn: (r) => r._measurement == \"nanodust\" and exists r.instrument)\n  |> keep(columns: [\"instrument\", \"_time\"])\n  |> sort(columns: [\"_time\"], desc: true)\n  |> keep(columns: [\"instrument\"])\n  |> limit(n:1)"
        },
        "refresh": 1,
        "regex": "",
        "type": "query"
      },
      {
        "current": {
          "text": "CO2",
          "value": "CO2"
        },
        "definition": "from(bucket: \"mitrap006\")\n  |> range(start: -10d)\n  |> filter(fn: (r) => r._measurement == \"co2\" and exists r.instrument)\n  |> keep(columns: [\"instrument\", \"_time\"])\n  |> sort(columns: [\"_time\"], desc: true)\n  |> keep(columns: [\"instrument\"])\n  |> limit(n:1)",
        "hide": 2,
        "name": "co2_name",
        "options": [],
        "query": {
          "query": "from(bucket: \"mitrap006\")\n  |> range(start: -10d)\n  |> filter(fn: (r) => r._measurement == \"co2\" and exists r.instrument)\n  |> keep(columns: [\"instrument\", \"_time\"])\n  |> sort(columns: [\"_time\"], desc: true)\n  |> keep(columns: [\"instrument\"])\n  |> limit(n:1)"
        },
        "refresh": 1,
        "regex": "",
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-3h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "browser",
  "title": "MITRAP",
  "uid": "c02285f1-8bee-4803-9a0b-616da99b333a",
  "version": 165
}